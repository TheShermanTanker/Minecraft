package net.minecraft.data.advancements;

import java.util.function.Consumer;
import net.minecraft.advancements.Advancement;
import net.minecraft.advancements.AdvancementFrameType;
import net.minecraft.advancements.AdvancementRequirements;
import net.minecraft.advancements.critereon.CriterionConditionDamage;
import net.minecraft.advancements.critereon.CriterionConditionDamageSource;
import net.minecraft.advancements.critereon.CriterionConditionItem;
import net.minecraft.advancements.critereon.CriterionConditionLocation;
import net.minecraft.advancements.critereon.CriterionTriggerChangedDimension;
import net.minecraft.advancements.critereon.CriterionTriggerCuredZombieVillager;
import net.minecraft.advancements.critereon.CriterionTriggerEnchantedItem;
import net.minecraft.advancements.critereon.CriterionTriggerEntityHurtPlayer;
import net.minecraft.advancements.critereon.CriterionTriggerInventoryChanged;
import net.minecraft.advancements.critereon.CriterionTriggerLocation;
import net.minecraft.network.chat.ChatMessage;
import net.minecraft.resources.MinecraftKey;
import net.minecraft.tags.TagsItem;
import net.minecraft.world.item.Items;
import net.minecraft.world.level.World;
import net.minecraft.world.level.block.Blocks;
import net.minecraft.world.level.levelgen.feature.StructureGenerator;

public class StoryAdvancements implements Consumer<Consumer<Advancement>> {
    @Override
    public void accept(Consumer<Advancement> consumer) {
        Advancement advancement = Advancement.SerializedAdvancement.advancement().display(Blocks.GRASS_BLOCK, new ChatMessage("advancements.story.root.title"), new ChatMessage("advancements.story.root.description"), new MinecraftKey("textures/gui/advancements/backgrounds/stone.png"), AdvancementFrameType.TASK, false, false, false).addCriterion("crafting_table", CriterionTriggerInventoryChanged.TriggerInstance.hasItems(Blocks.CRAFTING_TABLE)).save(consumer, "story/root");
        Advancement advancement2 = Advancement.SerializedAdvancement.advancement().parent(advancement).display(Items.WOODEN_PICKAXE, new ChatMessage("advancements.story.mine_stone.title"), new ChatMessage("advancements.story.mine_stone.description"), (MinecraftKey)null, AdvancementFrameType.TASK, true, true, false).addCriterion("get_stone", CriterionTriggerInventoryChanged.TriggerInstance.hasItems(CriterionConditionItem.Builder.item().of(TagsItem.STONE_TOOL_MATERIALS).build())).save(consumer, "story/mine_stone");
        Advancement advancement3 = Advancement.SerializedAdvancement.advancement().parent(advancement2).display(Items.STONE_PICKAXE, new ChatMessage("advancements.story.upgrade_tools.title"), new ChatMessage("advancements.story.upgrade_tools.description"), (MinecraftKey)null, AdvancementFrameType.TASK, true, true, false).addCriterion("stone_pickaxe", CriterionTriggerInventoryChanged.TriggerInstance.hasItems(Items.STONE_PICKAXE)).save(consumer, "story/upgrade_tools");
        Advancement advancement4 = Advancement.SerializedAdvancement.advancement().parent(advancement3).display(Items.IRON_INGOT, new ChatMessage("advancements.story.smelt_iron.title"), new ChatMessage("advancements.story.smelt_iron.description"), (MinecraftKey)null, AdvancementFrameType.TASK, true, true, false).addCriterion("iron", CriterionTriggerInventoryChanged.TriggerInstance.hasItems(Items.IRON_INGOT)).save(consumer, "story/smelt_iron");
        Advancement advancement5 = Advancement.SerializedAdvancement.advancement().parent(advancement4).display(Items.IRON_PICKAXE, new ChatMessage("advancements.story.iron_tools.title"), new ChatMessage("advancements.story.iron_tools.description"), (MinecraftKey)null, AdvancementFrameType.TASK, true, true, false).addCriterion("iron_pickaxe", CriterionTriggerInventoryChanged.TriggerInstance.hasItems(Items.IRON_PICKAXE)).save(consumer, "story/iron_tools");
        Advancement advancement6 = Advancement.SerializedAdvancement.advancement().parent(advancement5).display(Items.DIAMOND, new ChatMessage("advancements.story.mine_diamond.title"), new ChatMessage("advancements.story.mine_diamond.description"), (MinecraftKey)null, AdvancementFrameType.TASK, true, true, false).addCriterion("diamond", CriterionTriggerInventoryChanged.TriggerInstance.hasItems(Items.DIAMOND)).save(consumer, "story/mine_diamond");
        Advancement advancement7 = Advancement.SerializedAdvancement.advancement().parent(advancement4).display(Items.LAVA_BUCKET, new ChatMessage("advancements.story.lava_bucket.title"), new ChatMessage("advancements.story.lava_bucket.description"), (MinecraftKey)null, AdvancementFrameType.TASK, true, true, false).addCriterion("lava_bucket", CriterionTriggerInventoryChanged.TriggerInstance.hasItems(Items.LAVA_BUCKET)).save(consumer, "story/lava_bucket");
        Advancement advancement8 = Advancement.SerializedAdvancement.advancement().parent(advancement4).display(Items.IRON_CHESTPLATE, new ChatMessage("advancements.story.obtain_armor.title"), new ChatMessage("advancements.story.obtain_armor.description"), (MinecraftKey)null, AdvancementFrameType.TASK, true, true, false).requirements(AdvancementRequirements.OR).addCriterion("iron_helmet", CriterionTriggerInventoryChanged.TriggerInstance.hasItems(Items.IRON_HELMET)).addCriterion("iron_chestplate", CriterionTriggerInventoryChanged.TriggerInstance.hasItems(Items.IRON_CHESTPLATE)).addCriterion("iron_leggings", CriterionTriggerInventoryChanged.TriggerInstance.hasItems(Items.IRON_LEGGINGS)).addCriterion("iron_boots", CriterionTriggerInventoryChanged.TriggerInstance.hasItems(Items.IRON_BOOTS)).save(consumer, "story/obtain_armor");
        Advancement.SerializedAdvancement.advancement().parent(advancement6).display(Items.ENCHANTED_BOOK, new ChatMessage("advancements.story.enchant_item.title"), new ChatMessage("advancements.story.enchant_item.description"), (MinecraftKey)null, AdvancementFrameType.TASK, true, true, false).addCriterion("enchanted_item", CriterionTriggerEnchantedItem.TriggerInstance.enchantedItem()).save(consumer, "story/enchant_item");
        Advancement advancement9 = Advancement.SerializedAdvancement.advancement().parent(advancement7).display(Blocks.OBSIDIAN, new ChatMessage("advancements.story.form_obsidian.title"), new ChatMessage("advancements.story.form_obsidian.description"), (MinecraftKey)null, AdvancementFrameType.TASK, true, true, false).addCriterion("obsidian", CriterionTriggerInventoryChanged.TriggerInstance.hasItems(Blocks.OBSIDIAN)).save(consumer, "story/form_obsidian");
        Advancement.SerializedAdvancement.advancement().parent(advancement8).display(Items.SHIELD, new ChatMessage("advancements.story.deflect_arrow.title"), new ChatMessage("advancements.story.deflect_arrow.description"), (MinecraftKey)null, AdvancementFrameType.TASK, true, true, false).addCriterion("deflected_projectile", CriterionTriggerEntityHurtPlayer.TriggerInstance.entityHurtPlayer(CriterionConditionDamage.Builder.damageInstance().type(CriterionConditionDamageSource.Builder.damageType().isProjectile(true)).blocked(true))).save(consumer, "story/deflect_arrow");
        Advancement.SerializedAdvancement.advancement().parent(advancement6).display(Items.DIAMOND_CHESTPLATE, new ChatMessage("advancements.story.shiny_gear.title"), new ChatMessage("advancements.story.shiny_gear.description"), (MinecraftKey)null, AdvancementFrameType.TASK, true, true, false).requirements(AdvancementRequirements.OR).addCriterion("diamond_helmet", CriterionTriggerInventoryChanged.TriggerInstance.hasItems(Items.DIAMOND_HELMET)).addCriterion("diamond_chestplate", CriterionTriggerInventoryChanged.TriggerInstance.hasItems(Items.DIAMOND_CHESTPLATE)).addCriterion("diamond_leggings", CriterionTriggerInventoryChanged.TriggerInstance.hasItems(Items.DIAMOND_LEGGINGS)).addCriterion("diamond_boots", CriterionTriggerInventoryChanged.TriggerInstance.hasItems(Items.DIAMOND_BOOTS)).save(consumer, "story/shiny_gear");
        Advancement advancement10 = Advancement.SerializedAdvancement.advancement().parent(advancement9).display(Items.FLINT_AND_STEEL, new ChatMessage("advancements.story.enter_the_nether.title"), new ChatMessage("advancements.story.enter_the_nether.description"), (MinecraftKey)null, AdvancementFrameType.TASK, true, true, false).addCriterion("entered_nether", CriterionTriggerChangedDimension.TriggerInstance.changedDimensionTo(World.NETHER)).save(consumer, "story/enter_the_nether");
        Advancement.SerializedAdvancement.advancement().parent(advancement10).display(Items.GOLDEN_APPLE, new ChatMessage("advancements.story.cure_zombie_villager.title"), new ChatMessage("advancements.story.cure_zombie_villager.description"), (MinecraftKey)null, AdvancementFrameType.GOAL, true, true, false).addCriterion("cured_zombie", CriterionTriggerCuredZombieVillager.TriggerInstance.curedZombieVillager()).save(consumer, "story/cure_zombie_villager");
        Advancement advancement11 = Advancement.SerializedAdvancement.advancement().parent(advancement10).display(Items.ENDER_EYE, new ChatMessage("advancements.story.follow_ender_eye.title"), new ChatMessage("advancements.story.follow_ender_eye.description"), (MinecraftKey)null, AdvancementFrameType.TASK, true, true, false).addCriterion("in_stronghold", CriterionTriggerLocation.TriggerInstance.located(CriterionConditionLocation.inFeature(StructureGenerator.STRONGHOLD))).save(consumer, "story/follow_ender_eye");
        Advancement.SerializedAdvancement.advancement().parent(advancement11).display(Blocks.END_STONE, new ChatMessage("advancements.story.enter_the_end.title"), new ChatMessage("advancements.story.enter_the_end.description"), (MinecraftKey)null, AdvancementFrameType.TASK, true, true, false).addCriterion("entered_end", CriterionTriggerChangedDimension.TriggerInstance.changedDimensionTo(World.END)).save(consumer, "story/enter_the_end");
    }
}
