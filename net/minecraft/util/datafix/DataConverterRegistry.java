package net.minecraft.util.datafix;

import com.google.common.collect.ImmutableMap;
import com.mojang.datafixers.DSL;
import com.mojang.datafixers.DataFixer;
import com.mojang.datafixers.DataFixerBuilder;
import com.mojang.datafixers.Typed;
import com.mojang.datafixers.schemas.Schema;
import java.util.Map;
import java.util.Objects;
import java.util.function.BiFunction;
import java.util.function.UnaryOperator;
import net.minecraft.SharedConstants;
import net.minecraft.SystemUtils;
import net.minecraft.util.datafix.fixes.AddFlagIfNotPresentFix;
import net.minecraft.util.datafix.fixes.CavesAndCliffsRenames;
import net.minecraft.util.datafix.fixes.ChunkBedBlockEntityInjecterFix;
import net.minecraft.util.datafix.fixes.ChunkHeightAndBiomeFix;
import net.minecraft.util.datafix.fixes.ChunkProtoTickListFix;
import net.minecraft.util.datafix.fixes.ChunkRenamesFix;
import net.minecraft.util.datafix.fixes.DataConverterAbstractArrowPickup;
import net.minecraft.util.datafix.fixes.DataConverterAddChoices;
import net.minecraft.util.datafix.fixes.DataConverterAdvancement;
import net.minecraft.util.datafix.fixes.DataConverterAdvancementBase;
import net.minecraft.util.datafix.fixes.DataConverterArmorStand;
import net.minecraft.util.datafix.fixes.DataConverterAttributes;
import net.minecraft.util.datafix.fixes.DataConverterBanner;
import net.minecraft.util.datafix.fixes.DataConverterBannerColour;
import net.minecraft.util.datafix.fixes.DataConverterBedItem;
import net.minecraft.util.datafix.fixes.DataConverterBeehive;
import net.minecraft.util.datafix.fixes.DataConverterBiome;
import net.minecraft.util.datafix.fixes.DataConverterBiomeBase;
import net.minecraft.util.datafix.fixes.DataConverterBitStorageAlign;
import net.minecraft.util.datafix.fixes.DataConverterBlockEntityKeepPacked;
import net.minecraft.util.datafix.fixes.DataConverterBlockEntityUUID;
import net.minecraft.util.datafix.fixes.DataConverterBlockName;
import net.minecraft.util.datafix.fixes.DataConverterBlockRename;
import net.minecraft.util.datafix.fixes.DataConverterBlockRenameWithJigsaw;
import net.minecraft.util.datafix.fixes.DataConverterBook;
import net.minecraft.util.datafix.fixes.DataConverterCatType;
import net.minecraft.util.datafix.fixes.DataConverterCauldronRename;
import net.minecraft.util.datafix.fixes.DataConverterChunkLightRemove;
import net.minecraft.util.datafix.fixes.DataConverterChunkPalette;
import net.minecraft.util.datafix.fixes.DataConverterChunkStatus;
import net.minecraft.util.datafix.fixes.DataConverterChunkStatus2;
import net.minecraft.util.datafix.fixes.DataConverterChunkStructuresTemplateRename;
import net.minecraft.util.datafix.fixes.DataConverterColorlessShulkerEntity;
import net.minecraft.util.datafix.fixes.DataConverterCoral;
import net.minecraft.util.datafix.fixes.DataConverterCoralFan;
import net.minecraft.util.datafix.fixes.DataConverterCustomNameEntity;
import net.minecraft.util.datafix.fixes.DataConverterCustomNameItem;
import net.minecraft.util.datafix.fixes.DataConverterCustomNameTile;
import net.minecraft.util.datafix.fixes.DataConverterDropChances;
import net.minecraft.util.datafix.fixes.DataConverterDye;
import net.minecraft.util.datafix.fixes.DataConverterEntity;
import net.minecraft.util.datafix.fixes.DataConverterEntityBlockState;
import net.minecraft.util.datafix.fixes.DataConverterEntityCatSplit;
import net.minecraft.util.datafix.fixes.DataConverterEntityCodSalmon;
import net.minecraft.util.datafix.fixes.DataConverterEntityProjectileOwner;
import net.minecraft.util.datafix.fixes.DataConverterEntityPufferfish;
import net.minecraft.util.datafix.fixes.DataConverterEntityRavagerRename;
import net.minecraft.util.datafix.fixes.DataConverterEntityRename;
import net.minecraft.util.datafix.fixes.DataConverterEntityShulkerRotation;
import net.minecraft.util.datafix.fixes.DataConverterEntityTippedArrow;
import net.minecraft.util.datafix.fixes.DataConverterEntityUUID;
import net.minecraft.util.datafix.fixes.DataConverterEntityZombifiedPiglinRename;
import net.minecraft.util.datafix.fixes.DataConverterEquipment;
import net.minecraft.util.datafix.fixes.DataConverterFlatten;
import net.minecraft.util.datafix.fixes.DataConverterFlattenSpawnEgg;
import net.minecraft.util.datafix.fixes.DataConverterFlattenState;
import net.minecraft.util.datafix.fixes.DataConverterFurnaceRecipesUsed;
import net.minecraft.util.datafix.fixes.DataConverterGossip;
import net.minecraft.util.datafix.fixes.DataConverterGuardian;
import net.minecraft.util.datafix.fixes.DataConverterHanging;
import net.minecraft.util.datafix.fixes.DataConverterHealth;
import net.minecraft.util.datafix.fixes.DataConverterHeightmapRenaming;
import net.minecraft.util.datafix.fixes.DataConverterHorse;
import net.minecraft.util.datafix.fixes.DataConverterIglooMetadataRemoval;
import net.minecraft.util.datafix.fixes.DataConverterItemFrame;
import net.minecraft.util.datafix.fixes.DataConverterItemLoreComponentize;
import net.minecraft.util.datafix.fixes.DataConverterItemName;
import net.minecraft.util.datafix.fixes.DataConverterItemStackEnchantment;
import net.minecraft.util.datafix.fixes.DataConverterItemStackUUID;
import net.minecraft.util.datafix.fixes.DataConverterJigsawProperties;
import net.minecraft.util.datafix.fixes.DataConverterJigsawRotation;
import net.minecraft.util.datafix.fixes.DataConverterJukeBox;
import net.minecraft.util.datafix.fixes.DataConverterKeybind;
import net.minecraft.util.datafix.fixes.DataConverterKeybind2;
import net.minecraft.util.datafix.fixes.DataConverterLang;
import net.minecraft.util.datafix.fixes.DataConverterLeaves;
import net.minecraft.util.datafix.fixes.DataConverterLeavesBiome;
import net.minecraft.util.datafix.fixes.DataConverterLevelDataGeneratorOptions;
import net.minecraft.util.datafix.fixes.DataConverterMap;
import net.minecraft.util.datafix.fixes.DataConverterMapId;
import net.minecraft.util.datafix.fixes.DataConverterMaterialId;
import net.minecraft.util.datafix.fixes.DataConverterMemoryExpiry;
import net.minecraft.util.datafix.fixes.DataConverterMinecart;
import net.minecraft.util.datafix.fixes.DataConverterMiscUUID;
import net.minecraft.util.datafix.fixes.DataConverterMissingDimension;
import net.minecraft.util.datafix.fixes.DataConverterMobSpawner;
import net.minecraft.util.datafix.fixes.DataConverterNamedEntity;
import net.minecraft.util.datafix.fixes.DataConverterNewVillage;
import net.minecraft.util.datafix.fixes.DataConverterObjectiveDisplayName;
import net.minecraft.util.datafix.fixes.DataConverterObjectiveRenderType;
import net.minecraft.util.datafix.fixes.DataConverterOminousBannerBlockEntityRename;
import net.minecraft.util.datafix.fixes.DataConverterOminousBannerRename;
import net.minecraft.util.datafix.fixes.DataConverterOptionsAddTextBackground;
import net.minecraft.util.datafix.fixes.DataConverterPOI;
import net.minecraft.util.datafix.fixes.DataConverterPOIRebuild;
import net.minecraft.util.datafix.fixes.DataConverterPainting;
import net.minecraft.util.datafix.fixes.DataConverterPiston;
import net.minecraft.util.datafix.fixes.DataConverterPlayerUUID;
import net.minecraft.util.datafix.fixes.DataConverterPotionId;
import net.minecraft.util.datafix.fixes.DataConverterPotionWater;
import net.minecraft.util.datafix.fixes.DataConverterProtoChunk;
import net.minecraft.util.datafix.fixes.DataConverterRecipeBase;
import net.minecraft.util.datafix.fixes.DataConverterRecipeRename;
import net.minecraft.util.datafix.fixes.DataConverterRecipes;
import net.minecraft.util.datafix.fixes.DataConverterRedstoneConnections;
import net.minecraft.util.datafix.fixes.DataConverterRemoveGolemGossip;
import net.minecraft.util.datafix.fixes.DataConverterRiding;
import net.minecraft.util.datafix.fixes.DataConverterSaddle;
import net.minecraft.util.datafix.fixes.DataConverterSavedDataFeaturePoolElement;
import net.minecraft.util.datafix.fixes.DataConverterSavedDataUUID;
import net.minecraft.util.datafix.fixes.DataConverterSettingRename;
import net.minecraft.util.datafix.fixes.DataConverterShoulderEntity;
import net.minecraft.util.datafix.fixes.DataConverterShulker;
import net.minecraft.util.datafix.fixes.DataConverterShulkerBoxBlock;
import net.minecraft.util.datafix.fixes.DataConverterShulkerBoxItem;
import net.minecraft.util.datafix.fixes.DataConverterSignText;
import net.minecraft.util.datafix.fixes.DataConverterSkeleton;
import net.minecraft.util.datafix.fixes.DataConverterSpawnEgg;
import net.minecraft.util.datafix.fixes.DataConverterStatistic;
import net.minecraft.util.datafix.fixes.DataConverterStatsRename;
import net.minecraft.util.datafix.fixes.DataConverterStriderGravity;
import net.minecraft.util.datafix.fixes.DataConverterStructureReference;
import net.minecraft.util.datafix.fixes.DataConverterTeamDisplayName;
import net.minecraft.util.datafix.fixes.DataConverterTileEntity;
import net.minecraft.util.datafix.fixes.DataConverterTrappedChest;
import net.minecraft.util.datafix.fixes.DataConverterTypes;
import net.minecraft.util.datafix.fixes.DataConverterUUID;
import net.minecraft.util.datafix.fixes.DataConverterVBO;
import net.minecraft.util.datafix.fixes.DataConverterVillage;
import net.minecraft.util.datafix.fixes.DataConverterVillagerFollowRange;
import net.minecraft.util.datafix.fixes.DataConverterVillagerLevelXp;
import net.minecraft.util.datafix.fixes.DataConverterVillagerProfession;
import net.minecraft.util.datafix.fixes.DataConverterVillagerTrade;
import net.minecraft.util.datafix.fixes.DataConverterWallProperty;
import net.minecraft.util.datafix.fixes.DataConverterWolf;
import net.minecraft.util.datafix.fixes.DataConverterWorldGenSettings;
import net.minecraft.util.datafix.fixes.DataConverterWorldGenSettingsBuilding;
import net.minecraft.util.datafix.fixes.DataConverterZombie;
import net.minecraft.util.datafix.fixes.DataConverterZombieType;
import net.minecraft.util.datafix.fixes.DataConverterZombieVillagerLevelXp;
import net.minecraft.util.datafix.fixes.SpawnerDataFix;
import net.minecraft.util.datafix.fixes.WorldGenSettingsDisallowOldCustomWorldsFix;
import net.minecraft.util.datafix.fixes.WorldGenSettingsHeightAndBiomeFix;
import net.minecraft.util.datafix.schemas.DataConverterSchemaNamed;
import net.minecraft.util.datafix.schemas.DataConverterSchemaV100;
import net.minecraft.util.datafix.schemas.DataConverterSchemaV102;
import net.minecraft.util.datafix.schemas.DataConverterSchemaV1022;
import net.minecraft.util.datafix.schemas.DataConverterSchemaV106;
import net.minecraft.util.datafix.schemas.DataConverterSchemaV107;
import net.minecraft.util.datafix.schemas.DataConverterSchemaV1125;
import net.minecraft.util.datafix.schemas.DataConverterSchemaV135;
import net.minecraft.util.datafix.schemas.DataConverterSchemaV143;
import net.minecraft.util.datafix.schemas.DataConverterSchemaV1451;
import net.minecraft.util.datafix.schemas.DataConverterSchemaV1451_1;
import net.minecraft.util.datafix.schemas.DataConverterSchemaV1451_2;
import net.minecraft.util.datafix.schemas.DataConverterSchemaV1451_3;
import net.minecraft.util.datafix.schemas.DataConverterSchemaV1451_4;
import net.minecraft.util.datafix.schemas.DataConverterSchemaV1451_5;
import net.minecraft.util.datafix.schemas.DataConverterSchemaV1451_6;
import net.minecraft.util.datafix.schemas.DataConverterSchemaV1451_7;
import net.minecraft.util.datafix.schemas.DataConverterSchemaV1460;
import net.minecraft.util.datafix.schemas.DataConverterSchemaV1466;
import net.minecraft.util.datafix.schemas.DataConverterSchemaV1470;
import net.minecraft.util.datafix.schemas.DataConverterSchemaV1481;
import net.minecraft.util.datafix.schemas.DataConverterSchemaV1483;
import net.minecraft.util.datafix.schemas.DataConverterSchemaV1486;
import net.minecraft.util.datafix.schemas.DataConverterSchemaV1510;
import net.minecraft.util.datafix.schemas.DataConverterSchemaV1800;
import net.minecraft.util.datafix.schemas.DataConverterSchemaV1801;
import net.minecraft.util.datafix.schemas.DataConverterSchemaV1904;
import net.minecraft.util.datafix.schemas.DataConverterSchemaV1906;
import net.minecraft.util.datafix.schemas.DataConverterSchemaV1909;
import net.minecraft.util.datafix.schemas.DataConverterSchemaV1920;
import net.minecraft.util.datafix.schemas.DataConverterSchemaV1928;
import net.minecraft.util.datafix.schemas.DataConverterSchemaV1929;
import net.minecraft.util.datafix.schemas.DataConverterSchemaV1931;
import net.minecraft.util.datafix.schemas.DataConverterSchemaV2100;
import net.minecraft.util.datafix.schemas.DataConverterSchemaV2501;
import net.minecraft.util.datafix.schemas.DataConverterSchemaV2502;
import net.minecraft.util.datafix.schemas.DataConverterSchemaV2505;
import net.minecraft.util.datafix.schemas.DataConverterSchemaV2509;
import net.minecraft.util.datafix.schemas.DataConverterSchemaV2519;
import net.minecraft.util.datafix.schemas.DataConverterSchemaV2522;
import net.minecraft.util.datafix.schemas.DataConverterSchemaV2551;
import net.minecraft.util.datafix.schemas.DataConverterSchemaV2568;
import net.minecraft.util.datafix.schemas.DataConverterSchemaV2571;
import net.minecraft.util.datafix.schemas.DataConverterSchemaV2684;
import net.minecraft.util.datafix.schemas.DataConverterSchemaV2686;
import net.minecraft.util.datafix.schemas.DataConverterSchemaV2688;
import net.minecraft.util.datafix.schemas.DataConverterSchemaV2704;
import net.minecraft.util.datafix.schemas.DataConverterSchemaV2707;
import net.minecraft.util.datafix.schemas.DataConverterSchemaV501;
import net.minecraft.util.datafix.schemas.DataConverterSchemaV700;
import net.minecraft.util.datafix.schemas.DataConverterSchemaV701;
import net.minecraft.util.datafix.schemas.DataConverterSchemaV702;
import net.minecraft.util.datafix.schemas.DataConverterSchemaV703;
import net.minecraft.util.datafix.schemas.DataConverterSchemaV704;
import net.minecraft.util.datafix.schemas.DataConverterSchemaV705;
import net.minecraft.util.datafix.schemas.DataConverterSchemaV808;
import net.minecraft.util.datafix.schemas.DataConverterSchemaV99;
import net.minecraft.util.datafix.schemas.V2831;
import net.minecraft.util.datafix.schemas.V2832;
import net.minecraft.util.datafix.schemas.V2842;

public class DataConverterRegistry {
    private static final BiFunction<Integer, Schema, Schema> SAME = Schema::new;
    private static final BiFunction<Integer, Schema, Schema> SAME_NAMESPACED = DataConverterSchemaNamed::new;
    private static final DataFixer DATA_FIXER = createFixerUpper();

    private static DataFixer createFixerUpper() {
        DataFixerBuilder dataFixerBuilder = new DataFixerBuilder(SharedConstants.getCurrentVersion().getWorldVersion());
        addFixers(dataFixerBuilder);
        return dataFixerBuilder.build(SystemUtils.bootstrapExecutor());
    }

    public static DataFixer getDataFixer() {
        return DATA_FIXER;
    }

    private static void addFixers(DataFixerBuilder builder) {
        Schema schema = builder.addSchema(99, DataConverterSchemaV99::new);
        Schema schema2 = builder.addSchema(100, DataConverterSchemaV100::new);
        builder.addFixer(new DataConverterEquipment(schema2, true));
        Schema schema3 = builder.addSchema(101, SAME);
        builder.addFixer(new DataConverterSignText(schema3, false));
        Schema schema4 = builder.addSchema(102, DataConverterSchemaV102::new);
        builder.addFixer(new DataConverterMaterialId(schema4, true));
        builder.addFixer(new DataConverterPotionId(schema4, false));
        Schema schema5 = builder.addSchema(105, SAME);
        builder.addFixer(new DataConverterSpawnEgg(schema5, true));
        Schema schema6 = builder.addSchema(106, DataConverterSchemaV106::new);
        builder.addFixer(new DataConverterMobSpawner(schema6, true));
        Schema schema7 = builder.addSchema(107, DataConverterSchemaV107::new);
        builder.addFixer(new DataConverterMinecart(schema7, true));
        Schema schema8 = builder.addSchema(108, SAME);
        builder.addFixer(new DataConverterUUID(schema8, true));
        Schema schema9 = builder.addSchema(109, SAME);
        builder.addFixer(new DataConverterHealth(schema9, true));
        Schema schema10 = builder.addSchema(110, SAME);
        builder.addFixer(new DataConverterSaddle(schema10, true));
        Schema schema11 = builder.addSchema(111, SAME);
        builder.addFixer(new DataConverterHanging(schema11, true));
        Schema schema12 = builder.addSchema(113, SAME);
        builder.addFixer(new DataConverterDropChances(schema12, true));
        Schema schema13 = builder.addSchema(135, DataConverterSchemaV135::new);
        builder.addFixer(new DataConverterRiding(schema13, true));
        Schema schema14 = builder.addSchema(143, DataConverterSchemaV143::new);
        builder.addFixer(new DataConverterEntityTippedArrow(schema14, true));
        Schema schema15 = builder.addSchema(147, SAME);
        builder.addFixer(new DataConverterArmorStand(schema15, true));
        Schema schema16 = builder.addSchema(165, SAME);
        builder.addFixer(new DataConverterBook(schema16, true));
        Schema schema17 = builder.addSchema(501, DataConverterSchemaV501::new);
        builder.addFixer(new DataConverterAddChoices(schema17, "Add 1.10 entities fix", DataConverterTypes.ENTITY));
        Schema schema18 = builder.addSchema(502, SAME);
        builder.addFixer(DataConverterItemName.create(schema18, "cooked_fished item renamer", (string) -> {
            return Objects.equals(DataConverterSchemaNamed.ensureNamespaced(string), "minecraft:cooked_fished") ? "minecraft:cooked_fish" : string;
        }));
        builder.addFixer(new DataConverterZombie(schema18, false));
        Schema schema19 = builder.addSchema(505, SAME);
        builder.addFixer(new DataConverterVBO(schema19, false));
        Schema schema20 = builder.addSchema(700, DataConverterSchemaV700::new);
        builder.addFixer(new DataConverterGuardian(schema20, true));
        Schema schema21 = builder.addSchema(701, DataConverterSchemaV701::new);
        builder.addFixer(new DataConverterSkeleton(schema21, true));
        Schema schema22 = builder.addSchema(702, DataConverterSchemaV702::new);
        builder.addFixer(new DataConverterZombieType(schema22, true));
        Schema schema23 = builder.addSchema(703, DataConverterSchemaV703::new);
        builder.addFixer(new DataConverterHorse(schema23, true));
        Schema schema24 = builder.addSchema(704, DataConverterSchemaV704::new);
        builder.addFixer(new DataConverterTileEntity(schema24, true));
        Schema schema25 = builder.addSchema(705, DataConverterSchemaV705::new);
        builder.addFixer(new DataConverterEntity(schema25, true));
        Schema schema26 = builder.addSchema(804, SAME_NAMESPACED);
        builder.addFixer(new DataConverterBanner(schema26, true));
        Schema schema27 = builder.addSchema(806, SAME_NAMESPACED);
        builder.addFixer(new DataConverterPotionWater(schema27, false));
        Schema schema28 = builder.addSchema(808, DataConverterSchemaV808::new);
        builder.addFixer(new DataConverterAddChoices(schema28, "added shulker box", DataConverterTypes.BLOCK_ENTITY));
        Schema schema29 = builder.addSchema(808, 1, SAME_NAMESPACED);
        builder.addFixer(new DataConverterShulker(schema29, false));
        Schema schema30 = builder.addSchema(813, SAME_NAMESPACED);
        builder.addFixer(new DataConverterShulkerBoxItem(schema30, false));
        builder.addFixer(new DataConverterShulkerBoxBlock(schema30, false));
        Schema schema31 = builder.addSchema(816, SAME_NAMESPACED);
        builder.addFixer(new DataConverterLang(schema31, false));
        Schema schema32 = builder.addSchema(820, SAME_NAMESPACED);
        builder.addFixer(DataConverterItemName.create(schema32, "totem item renamer", createRenamer("minecraft:totem", "minecraft:totem_of_undying")));
        Schema schema33 = builder.addSchema(1022, DataConverterSchemaV1022::new);
        builder.addFixer(new DataConverterShoulderEntity(schema33, "added shoulder entities to players", DataConverterTypes.PLAYER));
        Schema schema34 = builder.addSchema(1125, DataConverterSchemaV1125::new);
        builder.addFixer(new ChunkBedBlockEntityInjecterFix(schema34, true));
        builder.addFixer(new DataConverterBedItem(schema34, false));
        Schema schema35 = builder.addSchema(1344, SAME_NAMESPACED);
        builder.addFixer(new DataConverterKeybind(schema35, false));
        Schema schema36 = builder.addSchema(1446, SAME_NAMESPACED);
        builder.addFixer(new DataConverterKeybind2(schema36, false));
        Schema schema37 = builder.addSchema(1450, SAME_NAMESPACED);
        builder.addFixer(new DataConverterFlattenState(schema37, false));
        Schema schema38 = builder.addSchema(1451, DataConverterSchemaV1451::new);
        builder.addFixer(new DataConverterAddChoices(schema38, "AddTrappedChestFix", DataConverterTypes.BLOCK_ENTITY));
        Schema schema39 = builder.addSchema(1451, 1, DataConverterSchemaV1451_1::new);
        builder.addFixer(new DataConverterChunkPalette(schema39, true));
        Schema schema40 = builder.addSchema(1451, 2, DataConverterSchemaV1451_2::new);
        builder.addFixer(new DataConverterPiston(schema40, true));
        Schema schema41 = builder.addSchema(1451, 3, DataConverterSchemaV1451_3::new);
        builder.addFixer(new DataConverterEntityBlockState(schema41, true));
        builder.addFixer(new DataConverterMap(schema41, false));
        Schema schema42 = builder.addSchema(1451, 4, DataConverterSchemaV1451_4::new);
        builder.addFixer(new DataConverterBlockName(schema42, true));
        builder.addFixer(new DataConverterFlatten(schema42, false));
        Schema schema43 = builder.addSchema(1451, 5, DataConverterSchemaV1451_5::new);
        builder.addFixer(new DataConverterAddChoices(schema43, "RemoveNoteBlockFlowerPotFix", DataConverterTypes.BLOCK_ENTITY));
        builder.addFixer(new DataConverterFlattenSpawnEgg(schema43, false));
        builder.addFixer(new DataConverterWolf(schema43, false));
        builder.addFixer(new DataConverterBannerColour(schema43, false));
        builder.addFixer(new DataConverterWorldGenSettings(schema43, false));
        Schema schema44 = builder.addSchema(1451, 6, DataConverterSchemaV1451_6::new);
        builder.addFixer(new DataConverterStatistic(schema44, true));
        builder.addFixer(new DataConverterShoulderEntity(schema44, "Rewrite objectives", DataConverterTypes.OBJECTIVE));
        builder.addFixer(new DataConverterJukeBox(schema44, false));
        Schema schema45 = builder.addSchema(1451, 7, DataConverterSchemaV1451_7::new);
        builder.addFixer(new DataConverterVillage(schema45, true));
        Schema schema46 = builder.addSchema(1451, 7, SAME_NAMESPACED);
        builder.addFixer(new DataConverterVillagerTrade(schema46, false));
        Schema schema47 = builder.addSchema(1456, SAME_NAMESPACED);
        builder.addFixer(new DataConverterItemFrame(schema47, false));
        Schema schema48 = builder.addSchema(1458, SAME_NAMESPACED);
        builder.addFixer(new DataConverterCustomNameEntity(schema48, false));
        builder.addFixer(new DataConverterCustomNameItem(schema48, false));
        builder.addFixer(new DataConverterCustomNameTile(schema48, false));
        Schema schema49 = builder.addSchema(1460, DataConverterSchemaV1460::new);
        builder.addFixer(new DataConverterPainting(schema49, false));
        Schema schema50 = builder.addSchema(1466, DataConverterSchemaV1466::new);
        builder.addFixer(new DataConverterProtoChunk(schema50, true));
        Schema schema51 = builder.addSchema(1470, DataConverterSchemaV1470::new);
        builder.addFixer(new DataConverterAddChoices(schema51, "Add 1.13 entities fix", DataConverterTypes.ENTITY));
        Schema schema52 = builder.addSchema(1474, SAME_NAMESPACED);
        builder.addFixer(new DataConverterColorlessShulkerEntity(schema52, false));
        builder.addFixer(DataConverterBlockRename.create(schema52, "Colorless shulker block fixer", (string) -> {
            return Objects.equals(DataConverterSchemaNamed.ensureNamespaced(string), "minecraft:purple_shulker_box") ? "minecraft:shulker_box" : string;
        }));
        builder.addFixer(DataConverterItemName.create(schema52, "Colorless shulker item fixer", (string) -> {
            return Objects.equals(DataConverterSchemaNamed.ensureNamespaced(string), "minecraft:purple_shulker_box") ? "minecraft:shulker_box" : string;
        }));
        Schema schema53 = builder.addSchema(1475, SAME_NAMESPACED);
        builder.addFixer(DataConverterBlockRename.create(schema53, "Flowing fixer", createRenamer(ImmutableMap.of("minecraft:flowing_water", "minecraft:water", "minecraft:flowing_lava", "minecraft:lava"))));
        Schema schema54 = builder.addSchema(1480, SAME_NAMESPACED);
        builder.addFixer(DataConverterBlockRename.create(schema54, "Rename coral blocks", createRenamer(DataConverterCoral.RENAMED_IDS)));
        builder.addFixer(DataConverterItemName.create(schema54, "Rename coral items", createRenamer(DataConverterCoral.RENAMED_IDS)));
        Schema schema55 = builder.addSchema(1481, DataConverterSchemaV1481::new);
        builder.addFixer(new DataConverterAddChoices(schema55, "Add conduit", DataConverterTypes.BLOCK_ENTITY));
        Schema schema56 = builder.addSchema(1483, DataConverterSchemaV1483::new);
        builder.addFixer(new DataConverterEntityPufferfish(schema56, true));
        builder.addFixer(DataConverterItemName.create(schema56, "Rename pufferfish egg item", createRenamer(DataConverterEntityPufferfish.RENAMED_IDS)));
        Schema schema57 = builder.addSchema(1484, SAME_NAMESPACED);
        builder.addFixer(DataConverterItemName.create(schema57, "Rename seagrass items", createRenamer(ImmutableMap.of("minecraft:sea_grass", "minecraft:seagrass", "minecraft:tall_sea_grass", "minecraft:tall_seagrass"))));
        builder.addFixer(DataConverterBlockRename.create(schema57, "Rename seagrass blocks", createRenamer(ImmutableMap.of("minecraft:sea_grass", "minecraft:seagrass", "minecraft:tall_sea_grass", "minecraft:tall_seagrass"))));
        builder.addFixer(new DataConverterHeightmapRenaming(schema57, false));
        Schema schema58 = builder.addSchema(1486, DataConverterSchemaV1486::new);
        builder.addFixer(new DataConverterEntityCodSalmon(schema58, true));
        builder.addFixer(DataConverterItemName.create(schema58, "Rename cod/salmon egg items", createRenamer(DataConverterEntityCodSalmon.RENAMED_EGG_IDS)));
        Schema schema59 = builder.addSchema(1487, SAME_NAMESPACED);
        builder.addFixer(DataConverterItemName.create(schema59, "Rename prismarine_brick(s)_* blocks", createRenamer(ImmutableMap.of("minecraft:prismarine_bricks_slab", "minecraft:prismarine_brick_slab", "minecraft:prismarine_bricks_stairs", "minecraft:prismarine_brick_stairs"))));
        builder.addFixer(DataConverterBlockRename.create(schema59, "Rename prismarine_brick(s)_* items", createRenamer(ImmutableMap.of("minecraft:prismarine_bricks_slab", "minecraft:prismarine_brick_slab", "minecraft:prismarine_bricks_stairs", "minecraft:prismarine_brick_stairs"))));
        Schema schema60 = builder.addSchema(1488, SAME_NAMESPACED);
        builder.addFixer(DataConverterBlockRename.create(schema60, "Rename kelp/kelptop", createRenamer(ImmutableMap.of("minecraft:kelp_top", "minecraft:kelp", "minecraft:kelp", "minecraft:kelp_plant"))));
        builder.addFixer(DataConverterItemName.create(schema60, "Rename kelptop", createRenamer("minecraft:kelp_top", "minecraft:kelp")));
        builder.addFixer(new DataConverterNamedEntity(schema60, false, "Command block block entity custom name fix", DataConverterTypes.BLOCK_ENTITY, "minecraft:command_block") {
            @Override
            protected Typed<?> fix(Typed<?> inputType) {
                return inputType.update(DSL.remainderFinder(), DataConverterCustomNameEntity::fixTagCustomName);
            }
        });
        builder.addFixer(new DataConverterNamedEntity(schema60, false, "Command block minecart custom name fix", DataConverterTypes.ENTITY, "minecraft:commandblock_minecart") {
            @Override
            protected Typed<?> fix(Typed<?> inputType) {
                return inputType.update(DSL.remainderFinder(), DataConverterCustomNameEntity::fixTagCustomName);
            }
        });
        builder.addFixer(new DataConverterIglooMetadataRemoval(schema60, false));
        Schema schema61 = builder.addSchema(1490, SAME_NAMESPACED);
        builder.addFixer(DataConverterBlockRename.create(schema61, "Rename melon_block", createRenamer("minecraft:melon_block", "minecraft:melon")));
        builder.addFixer(DataConverterItemName.create(schema61, "Rename melon_block/melon/speckled_melon", createRenamer(ImmutableMap.of("minecraft:melon_block", "minecraft:melon", "minecraft:melon", "minecraft:melon_slice", "minecraft:speckled_melon", "minecraft:glistering_melon_slice"))));
        Schema schema62 = builder.addSchema(1492, SAME_NAMESPACED);
        builder.addFixer(new DataConverterChunkStructuresTemplateRename(schema62, false));
        Schema schema63 = builder.addSchema(1494, SAME_NAMESPACED);
        builder.addFixer(new DataConverterItemStackEnchantment(schema63, false));
        Schema schema64 = builder.addSchema(1496, SAME_NAMESPACED);
        builder.addFixer(new DataConverterLeaves(schema64, false));
        Schema schema65 = builder.addSchema(1500, SAME_NAMESPACED);
        builder.addFixer(new DataConverterBlockEntityKeepPacked(schema65, false));
        Schema schema66 = builder.addSchema(1501, SAME_NAMESPACED);
        builder.addFixer(new DataConverterAdvancement(schema66, false));
        Schema schema67 = builder.addSchema(1502, SAME_NAMESPACED);
        builder.addFixer(new DataConverterRecipes(schema67, false));
        Schema schema68 = builder.addSchema(1506, SAME_NAMESPACED);
        builder.addFixer(new DataConverterLevelDataGeneratorOptions(schema68, false));
        Schema schema69 = builder.addSchema(1510, DataConverterSchemaV1510::new);
        builder.addFixer(DataConverterBlockRename.create(schema69, "Block renamening fix", createRenamer(DataConverterEntityRename.RENAMED_BLOCKS)));
        builder.addFixer(DataConverterItemName.create(schema69, "Item renamening fix", createRenamer(DataConverterEntityRename.RENAMED_ITEMS)));
        builder.addFixer(new DataConverterRecipeRename(schema69, false));
        builder.addFixer(new DataConverterEntityRename(schema69, true));
        builder.addFixer(new DataConverterStatsRename(schema69, "SwimStatsRenameFix", ImmutableMap.of("minecraft:swim_one_cm", "minecraft:walk_on_water_one_cm", "minecraft:dive_one_cm", "minecraft:walk_under_water_one_cm")));
        Schema schema70 = builder.addSchema(1514, SAME_NAMESPACED);
        builder.addFixer(new DataConverterObjectiveDisplayName(schema70, false));
        builder.addFixer(new DataConverterTeamDisplayName(schema70, false));
        builder.addFixer(new DataConverterObjectiveRenderType(schema70, false));
        Schema schema71 = builder.addSchema(1515, SAME_NAMESPACED);
        builder.addFixer(DataConverterBlockRename.create(schema71, "Rename coral fan blocks", createRenamer(DataConverterCoralFan.RENAMED_IDS)));
        Schema schema72 = builder.addSchema(1624, SAME_NAMESPACED);
        builder.addFixer(new DataConverterTrappedChest(schema72, false));
        Schema schema73 = builder.addSchema(1800, DataConverterSchemaV1800::new);
        builder.addFixer(new DataConverterAddChoices(schema73, "Added 1.14 mobs fix", DataConverterTypes.ENTITY));
        builder.addFixer(DataConverterItemName.create(schema73, "Rename dye items", createRenamer(DataConverterDye.RENAMED_IDS)));
        Schema schema74 = builder.addSchema(1801, DataConverterSchemaV1801::new);
        builder.addFixer(new DataConverterAddChoices(schema74, "Added Illager Beast", DataConverterTypes.ENTITY));
        Schema schema75 = builder.addSchema(1802, SAME_NAMESPACED);
        builder.addFixer(DataConverterBlockRename.create(schema75, "Rename sign blocks & stone slabs", createRenamer(ImmutableMap.of("minecraft:stone_slab", "minecraft:smooth_stone_slab", "minecraft:sign", "minecraft:oak_sign", "minecraft:wall_sign", "minecraft:oak_wall_sign"))));
        builder.addFixer(DataConverterItemName.create(schema75, "Rename sign item & stone slabs", createRenamer(ImmutableMap.of("minecraft:stone_slab", "minecraft:smooth_stone_slab", "minecraft:sign", "minecraft:oak_sign"))));
        Schema schema76 = builder.addSchema(1803, SAME_NAMESPACED);
        builder.addFixer(new DataConverterItemLoreComponentize(schema76, false));
        Schema schema77 = builder.addSchema(1904, DataConverterSchemaV1904::new);
        builder.addFixer(new DataConverterAddChoices(schema77, "Added Cats", DataConverterTypes.ENTITY));
        builder.addFixer(new DataConverterEntityCatSplit(schema77, false));
        Schema schema78 = builder.addSchema(1905, SAME_NAMESPACED);
        builder.addFixer(new DataConverterChunkStatus(schema78, false));
        Schema schema79 = builder.addSchema(1906, DataConverterSchemaV1906::new);
        builder.addFixer(new DataConverterAddChoices(schema79, "Add POI Blocks", DataConverterTypes.BLOCK_ENTITY));
        Schema schema80 = builder.addSchema(1909, DataConverterSchemaV1909::new);
        builder.addFixer(new DataConverterAddChoices(schema80, "Add jigsaw", DataConverterTypes.BLOCK_ENTITY));
        Schema schema81 = builder.addSchema(1911, SAME_NAMESPACED);
        builder.addFixer(new DataConverterChunkStatus2(schema81, false));
        Schema schema82 = builder.addSchema(1917, SAME_NAMESPACED);
        builder.addFixer(new DataConverterCatType(schema82, false));
        Schema schema83 = builder.addSchema(1918, SAME_NAMESPACED);
        builder.addFixer(new DataConverterVillagerProfession(schema83, "minecraft:villager"));
        builder.addFixer(new DataConverterVillagerProfession(schema83, "minecraft:zombie_villager"));
        Schema schema84 = builder.addSchema(1920, DataConverterSchemaV1920::new);
        builder.addFixer(new DataConverterNewVillage(schema84, false));
        builder.addFixer(new DataConverterAddChoices(schema84, "Add campfire", DataConverterTypes.BLOCK_ENTITY));
        Schema schema85 = builder.addSchema(1925, SAME_NAMESPACED);
        builder.addFixer(new DataConverterMapId(schema85, false));
        Schema schema86 = builder.addSchema(1928, DataConverterSchemaV1928::new);
        builder.addFixer(new DataConverterEntityRavagerRename(schema86, true));
        builder.addFixer(DataConverterItemName.create(schema86, "Rename ravager egg item", createRenamer(DataConverterEntityRavagerRename.RENAMED_IDS)));
        Schema schema87 = builder.addSchema(1929, DataConverterSchemaV1929::new);
        builder.addFixer(new DataConverterAddChoices(schema87, "Add Wandering Trader and Trader Llama", DataConverterTypes.ENTITY));
        Schema schema88 = builder.addSchema(1931, DataConverterSchemaV1931::new);
        builder.addFixer(new DataConverterAddChoices(schema88, "Added Fox", DataConverterTypes.ENTITY));
        Schema schema89 = builder.addSchema(1936, SAME_NAMESPACED);
        builder.addFixer(new DataConverterOptionsAddTextBackground(schema89, false));
        Schema schema90 = builder.addSchema(1946, SAME_NAMESPACED);
        builder.addFixer(new DataConverterPOI(schema90, false));
        Schema schema91 = builder.addSchema(1948, SAME_NAMESPACED);
        builder.addFixer(new DataConverterOminousBannerRename(schema91, false));
        Schema schema92 = builder.addSchema(1953, SAME_NAMESPACED);
        builder.addFixer(new DataConverterOminousBannerBlockEntityRename(schema92, false));
        Schema schema93 = builder.addSchema(1955, SAME_NAMESPACED);
        builder.addFixer(new DataConverterVillagerLevelXp(schema93, false));
        builder.addFixer(new DataConverterZombieVillagerLevelXp(schema93, false));
        Schema schema94 = builder.addSchema(1961, SAME_NAMESPACED);
        builder.addFixer(new DataConverterChunkLightRemove(schema94, false));
        Schema schema95 = builder.addSchema(1963, SAME_NAMESPACED);
        builder.addFixer(new DataConverterRemoveGolemGossip(schema95, false));
        Schema schema96 = builder.addSchema(2100, DataConverterSchemaV2100::new);
        builder.addFixer(new DataConverterAddChoices(schema96, "Added Bee and Bee Stinger", DataConverterTypes.ENTITY));
        builder.addFixer(new DataConverterAddChoices(schema96, "Add beehive", DataConverterTypes.BLOCK_ENTITY));
        builder.addFixer(new DataConverterRecipeBase(schema96, false, "Rename sugar recipe", createRenamer("minecraft:sugar", "sugar_from_sugar_cane")));
        builder.addFixer(new DataConverterAdvancementBase(schema96, false, "Rename sugar recipe advancement", createRenamer("minecraft:recipes/misc/sugar", "minecraft:recipes/misc/sugar_from_sugar_cane")));
        Schema schema97 = builder.addSchema(2202, SAME_NAMESPACED);
        builder.addFixer(new DataConverterLeavesBiome(schema97, false));
        Schema schema98 = builder.addSchema(2209, SAME_NAMESPACED);
        builder.addFixer(DataConverterItemName.create(schema98, "Rename bee_hive item to beehive", createRenamer("minecraft:bee_hive", "minecraft:beehive")));
        builder.addFixer(new DataConverterBeehive(schema98));
        builder.addFixer(DataConverterBlockRename.create(schema98, "Rename bee_hive block to beehive", createRenamer("minecraft:bee_hive", "minecraft:beehive")));
        Schema schema99 = builder.addSchema(2211, SAME_NAMESPACED);
        builder.addFixer(new DataConverterStructureReference(schema99, false));
        Schema schema100 = builder.addSchema(2218, SAME_NAMESPACED);
        builder.addFixer(new DataConverterPOIRebuild(schema100, false));
        Schema schema101 = builder.addSchema(2501, DataConverterSchemaV2501::new);
        builder.addFixer(new DataConverterFurnaceRecipesUsed(schema101, true));
        Schema schema102 = builder.addSchema(2502, DataConverterSchemaV2502::new);
        builder.addFixer(new DataConverterAddChoices(schema102, "Added Hoglin", DataConverterTypes.ENTITY));
        Schema schema103 = builder.addSchema(2503, SAME_NAMESPACED);
        builder.addFixer(new DataConverterWallProperty(schema103, false));
        builder.addFixer(new DataConverterAdvancementBase(schema103, false, "Composter category change", createRenamer("minecraft:recipes/misc/composter", "minecraft:recipes/decorations/composter")));
        Schema schema104 = builder.addSchema(2505, DataConverterSchemaV2505::new);
        builder.addFixer(new DataConverterAddChoices(schema104, "Added Piglin", DataConverterTypes.ENTITY));
        builder.addFixer(new DataConverterMemoryExpiry(schema104, "minecraft:villager"));
        Schema schema105 = builder.addSchema(2508, SAME_NAMESPACED);
        builder.addFixer(DataConverterItemName.create(schema105, "Renamed fungi items to fungus", createRenamer(ImmutableMap.of("minecraft:warped_fungi", "minecraft:warped_fungus", "minecraft:crimson_fungi", "minecraft:crimson_fungus"))));
        builder.addFixer(DataConverterBlockRename.create(schema105, "Renamed fungi blocks to fungus", createRenamer(ImmutableMap.of("minecraft:warped_fungi", "minecraft:warped_fungus", "minecraft:crimson_fungi", "minecraft:crimson_fungus"))));
        Schema schema106 = builder.addSchema(2509, DataConverterSchemaV2509::new);
        builder.addFixer(new DataConverterEntityZombifiedPiglinRename(schema106));
        builder.addFixer(DataConverterItemName.create(schema106, "Rename zombie pigman egg item", createRenamer(DataConverterEntityZombifiedPiglinRename.RENAMED_IDS)));
        Schema schema107 = builder.addSchema(2511, SAME_NAMESPACED);
        builder.addFixer(new DataConverterEntityProjectileOwner(schema107));
        Schema schema108 = builder.addSchema(2514, SAME_NAMESPACED);
        builder.addFixer(new DataConverterEntityUUID(schema108));
        builder.addFixer(new DataConverterBlockEntityUUID(schema108));
        builder.addFixer(new DataConverterPlayerUUID(schema108));
        builder.addFixer(new DataConverterMiscUUID(schema108));
        builder.addFixer(new DataConverterSavedDataUUID(schema108));
        builder.addFixer(new DataConverterItemStackUUID(schema108));
        Schema schema109 = builder.addSchema(2516, SAME_NAMESPACED);
        builder.addFixer(new DataConverterGossip(schema109, "minecraft:villager"));
        builder.addFixer(new DataConverterGossip(schema109, "minecraft:zombie_villager"));
        Schema schema110 = builder.addSchema(2518, SAME_NAMESPACED);
        builder.addFixer(new DataConverterJigsawProperties(schema110, false));
        builder.addFixer(new DataConverterJigsawRotation(schema110, false));
        Schema schema111 = builder.addSchema(2519, DataConverterSchemaV2519::new);
        builder.addFixer(new DataConverterAddChoices(schema111, "Added Strider", DataConverterTypes.ENTITY));
        Schema schema112 = builder.addSchema(2522, DataConverterSchemaV2522::new);
        builder.addFixer(new DataConverterAddChoices(schema112, "Added Zoglin", DataConverterTypes.ENTITY));
        Schema schema113 = builder.addSchema(2523, SAME_NAMESPACED);
        builder.addFixer(new DataConverterAttributes(schema113));
        Schema schema114 = builder.addSchema(2527, SAME_NAMESPACED);
        builder.addFixer(new DataConverterBitStorageAlign(schema114));
        Schema schema115 = builder.addSchema(2528, SAME_NAMESPACED);
        builder.addFixer(DataConverterItemName.create(schema115, "Rename soul fire torch and soul fire lantern", createRenamer(ImmutableMap.of("minecraft:soul_fire_torch", "minecraft:soul_torch", "minecraft:soul_fire_lantern", "minecraft:soul_lantern"))));
        builder.addFixer(DataConverterBlockRename.create(schema115, "Rename soul fire torch and soul fire lantern", createRenamer(ImmutableMap.of("minecraft:soul_fire_torch", "minecraft:soul_torch", "minecraft:soul_fire_wall_torch", "minecraft:soul_wall_torch", "minecraft:soul_fire_lantern", "minecraft:soul_lantern"))));
        Schema schema116 = builder.addSchema(2529, SAME_NAMESPACED);
        builder.addFixer(new DataConverterStriderGravity(schema116, false));
        Schema schema117 = builder.addSchema(2531, SAME_NAMESPACED);
        builder.addFixer(new DataConverterRedstoneConnections(schema117));
        Schema schema118 = builder.addSchema(2533, SAME_NAMESPACED);
        builder.addFixer(new DataConverterVillagerFollowRange(schema118));
        Schema schema119 = builder.addSchema(2535, SAME_NAMESPACED);
        builder.addFixer(new DataConverterEntityShulkerRotation(schema119));
        Schema schema120 = builder.addSchema(2550, SAME_NAMESPACED);
        builder.addFixer(new DataConverterWorldGenSettingsBuilding(schema120));
        Schema schema121 = builder.addSchema(2551, DataConverterSchemaV2551::new);
        builder.addFixer(new DataConverterShoulderEntity(schema121, "add types to WorldGenData", DataConverterTypes.WORLD_GEN_SETTINGS));
        Schema schema122 = builder.addSchema(2552, SAME_NAMESPACED);
        builder.addFixer(new DataConverterBiomeBase(schema122, false, "Nether biome rename", ImmutableMap.of("minecraft:nether", "minecraft:nether_wastes")));
        Schema schema123 = builder.addSchema(2553, SAME_NAMESPACED);
        builder.addFixer(new DataConverterBiome(schema123, false));
        Schema schema124 = builder.addSchema(2558, SAME_NAMESPACED);
        builder.addFixer(new DataConverterMissingDimension(schema124, false));
        builder.addFixer(new DataConverterSettingRename(schema124, false, "Rename swapHands setting", "key_key.swapHands", "key_key.swapOffhand"));
        Schema schema125 = builder.addSchema(2568, DataConverterSchemaV2568::new);
        builder.addFixer(new DataConverterAddChoices(schema125, "Added Piglin Brute", DataConverterTypes.ENTITY));
        Schema schema126 = builder.addSchema(2571, DataConverterSchemaV2571::new);
        builder.addFixer(new DataConverterAddChoices(schema126, "Added Goat", DataConverterTypes.ENTITY));
        Schema schema127 = builder.addSchema(2679, SAME_NAMESPACED);
        builder.addFixer(new DataConverterCauldronRename(schema127, false));
        Schema schema128 = builder.addSchema(2680, SAME_NAMESPACED);
        builder.addFixer(DataConverterItemName.create(schema128, "Renamed grass path item to dirt path", createRenamer("minecraft:grass_path", "minecraft:dirt_path")));
        builder.addFixer(DataConverterBlockRenameWithJigsaw.create(schema128, "Renamed grass path block to dirt path", createRenamer("minecraft:grass_path", "minecraft:dirt_path")));
        Schema schema129 = builder.addSchema(2684, DataConverterSchemaV2684::new);
        builder.addFixer(new DataConverterAddChoices(schema129, "Added Sculk Sensor", DataConverterTypes.BLOCK_ENTITY));
        Schema schema130 = builder.addSchema(2686, DataConverterSchemaV2686::new);
        builder.addFixer(new DataConverterAddChoices(schema130, "Added Axolotl", DataConverterTypes.ENTITY));
        Schema schema131 = builder.addSchema(2688, DataConverterSchemaV2688::new);
        builder.addFixer(new DataConverterAddChoices(schema131, "Added Glow Squid", DataConverterTypes.ENTITY));
        builder.addFixer(new DataConverterAddChoices(schema131, "Added Glow Item Frame", DataConverterTypes.ENTITY));
        Schema schema132 = builder.addSchema(2690, SAME_NAMESPACED);
        ImmutableMap<String, String> immutableMap = ImmutableMap.<String, String>builder().put("minecraft:weathered_copper_block", "minecraft:oxidized_copper_block").put("minecraft:semi_weathered_copper_block", "minecraft:weathered_copper_block").put("minecraft:lightly_weathered_copper_block", "minecraft:exposed_copper_block").put("minecraft:weathered_cut_copper", "minecraft:oxidized_cut_copper").put("minecraft:semi_weathered_cut_copper", "minecraft:weathered_cut_copper").put("minecraft:lightly_weathered_cut_copper", "minecraft:exposed_cut_copper").put("minecraft:weathered_cut_copper_stairs", "minecraft:oxidized_cut_copper_stairs").put("minecraft:semi_weathered_cut_copper_stairs", "minecraft:weathered_cut_copper_stairs").put("minecraft:lightly_weathered_cut_copper_stairs", "minecraft:exposed_cut_copper_stairs").put("minecraft:weathered_cut_copper_slab", "minecraft:oxidized_cut_copper_slab").put("minecraft:semi_weathered_cut_copper_slab", "minecraft:weathered_cut_copper_slab").put("minecraft:lightly_weathered_cut_copper_slab", "minecraft:exposed_cut_copper_slab").put("minecraft:waxed_semi_weathered_copper", "minecraft:waxed_weathered_copper").put("minecraft:waxed_lightly_weathered_copper", "minecraft:waxed_exposed_copper").put("minecraft:waxed_semi_weathered_cut_copper", "minecraft:waxed_weathered_cut_copper").put("minecraft:waxed_lightly_weathered_cut_copper", "minecraft:waxed_exposed_cut_copper").put("minecraft:waxed_semi_weathered_cut_copper_stairs", "minecraft:waxed_weathered_cut_copper_stairs").put("minecraft:waxed_lightly_weathered_cut_copper_stairs", "minecraft:waxed_exposed_cut_copper_stairs").put("minecraft:waxed_semi_weathered_cut_copper_slab", "minecraft:waxed_weathered_cut_copper_slab").put("minecraft:waxed_lightly_weathered_cut_copper_slab", "minecraft:waxed_exposed_cut_copper_slab").build();
        builder.addFixer(DataConverterItemName.create(schema132, "Renamed copper block items to new oxidized terms", createRenamer(immutableMap)));
        builder.addFixer(DataConverterBlockRenameWithJigsaw.create(schema132, "Renamed copper blocks to new oxidized terms", createRenamer(immutableMap)));
        Schema schema133 = builder.addSchema(2691, SAME_NAMESPACED);
        ImmutableMap<String, String> immutableMap2 = ImmutableMap.<String, String>builder().put("minecraft:waxed_copper", "minecraft:waxed_copper_block").put("minecraft:oxidized_copper_block", "minecraft:oxidized_copper").put("minecraft:weathered_copper_block", "minecraft:weathered_copper").put("minecraft:exposed_copper_block", "minecraft:exposed_copper").build();
        builder.addFixer(DataConverterItemName.create(schema133, "Rename copper item suffixes", createRenamer(immutableMap2)));
        builder.addFixer(DataConverterBlockRenameWithJigsaw.create(schema133, "Rename copper blocks suffixes", createRenamer(immutableMap2)));
        Schema schema134 = builder.addSchema(2693, SAME_NAMESPACED);
        builder.addFixer(new AddFlagIfNotPresentFix(schema134, DataConverterTypes.WORLD_GEN_SETTINGS, "has_increased_height_already", false));
        Schema schema135 = builder.addSchema(2696, SAME_NAMESPACED);
        ImmutableMap<String, String> immutableMap3 = ImmutableMap.<String, String>builder().put("minecraft:grimstone", "minecraft:deepslate").put("minecraft:grimstone_slab", "minecraft:cobbled_deepslate_slab").put("minecraft:grimstone_stairs", "minecraft:cobbled_deepslate_stairs").put("minecraft:grimstone_wall", "minecraft:cobbled_deepslate_wall").put("minecraft:polished_grimstone", "minecraft:polished_deepslate").put("minecraft:polished_grimstone_slab", "minecraft:polished_deepslate_slab").put("minecraft:polished_grimstone_stairs", "minecraft:polished_deepslate_stairs").put("minecraft:polished_grimstone_wall", "minecraft:polished_deepslate_wall").put("minecraft:grimstone_tiles", "minecraft:deepslate_tiles").put("minecraft:grimstone_tile_slab", "minecraft:deepslate_tile_slab").put("minecraft:grimstone_tile_stairs", "minecraft:deepslate_tile_stairs").put("minecraft:grimstone_tile_wall", "minecraft:deepslate_tile_wall").put("minecraft:grimstone_bricks", "minecraft:deepslate_bricks").put("minecraft:grimstone_brick_slab", "minecraft:deepslate_brick_slab").put("minecraft:grimstone_brick_stairs", "minecraft:deepslate_brick_stairs").put("minecraft:grimstone_brick_wall", "minecraft:deepslate_brick_wall").put("minecraft:chiseled_grimstone", "minecraft:chiseled_deepslate").build();
        builder.addFixer(DataConverterItemName.create(schema135, "Renamed grimstone block items to deepslate", createRenamer(immutableMap3)));
        builder.addFixer(DataConverterBlockRenameWithJigsaw.create(schema135, "Renamed grimstone blocks to deepslate", createRenamer(immutableMap3)));
        Schema schema136 = builder.addSchema(2700, SAME_NAMESPACED);
        builder.addFixer(DataConverterBlockRenameWithJigsaw.create(schema136, "Renamed cave vines blocks", createRenamer(ImmutableMap.of("minecraft:cave_vines_head", "minecraft:cave_vines", "minecraft:cave_vines_body", "minecraft:cave_vines_plant"))));
        Schema schema137 = builder.addSchema(2701, SAME_NAMESPACED);
        builder.addFixer(new DataConverterSavedDataFeaturePoolElement(schema137));
        Schema schema138 = builder.addSchema(2702, SAME_NAMESPACED);
        builder.addFixer(new DataConverterAbstractArrowPickup(schema138));
        Schema schema139 = builder.addSchema(2704, DataConverterSchemaV2704::new);
        builder.addFixer(new DataConverterAddChoices(schema139, "Added Goat", DataConverterTypes.ENTITY));
        Schema schema140 = builder.addSchema(2707, DataConverterSchemaV2707::new);
        builder.addFixer(new DataConverterAddChoices(schema140, "Added Marker", DataConverterTypes.ENTITY));
        builder.addFixer(new AddFlagIfNotPresentFix(schema140, DataConverterTypes.WORLD_GEN_SETTINGS, "has_increased_height_already", true));
        Schema schema141 = builder.addSchema(2710, SAME_NAMESPACED);
        builder.addFixer(new DataConverterStatsRename(schema141, "Renamed play_one_minute stat to play_time", ImmutableMap.of("minecraft:play_one_minute", "minecraft:play_time")));
        Schema schema142 = builder.addSchema(2717, SAME_NAMESPACED);
        builder.addFixer(DataConverterItemName.create(schema142, "Rename azalea_leaves_flowers", createRenamer(ImmutableMap.of("minecraft:azalea_leaves_flowers", "minecraft:flowering_azalea_leaves"))));
        builder.addFixer(DataConverterBlockRename.create(schema142, "Rename azalea_leaves_flowers items", createRenamer(ImmutableMap.of("minecraft:azalea_leaves_flowers", "minecraft:flowering_azalea_leaves"))));
        Schema schema143 = builder.addSchema(2825, SAME_NAMESPACED);
        builder.addFixer(new AddFlagIfNotPresentFix(schema143, DataConverterTypes.WORLD_GEN_SETTINGS, "has_increased_height_already", false));
        Schema schema144 = builder.addSchema(2831, V2831::new);
        builder.addFixer(new SpawnerDataFix(schema144));
        Schema schema145 = builder.addSchema(2832, V2832::new);
        builder.addFixer(new WorldGenSettingsHeightAndBiomeFix(schema145));
        builder.addFixer(new ChunkHeightAndBiomeFix(schema145));
        Schema schema146 = builder.addSchema(2833, SAME_NAMESPACED);
        builder.addFixer(new WorldGenSettingsDisallowOldCustomWorldsFix(schema146));
        Schema schema147 = builder.addSchema(2838, SAME_NAMESPACED);
        builder.addFixer(new DataConverterBiomeBase(schema147, false, "Caves and Cliffs biome renames", CavesAndCliffsRenames.RENAMES));
        Schema schema148 = builder.addSchema(2841, SAME_NAMESPACED);
        builder.addFixer(new ChunkProtoTickListFix(schema148));
        Schema schema149 = builder.addSchema(2842, V2842::new);
        builder.addFixer(new ChunkRenamesFix(schema149));
        Schema schema150 = builder.addSchema(2843, SAME_NAMESPACED);
        builder.addFixer(new DataConverterBiomeBase(schema150, false, "Remove Deep Warm Ocean", Map.of("minecraft:deep_warm_ocean", "minecraft:warm_ocean")));
        Schema schema151 = builder.addSchema(2846, SAME_NAMESPACED);
        builder.addFixer(new DataConverterAdvancementBase(schema151, false, "Rename some C&C part 2 advancements", createRenamer(ImmutableMap.of("minecraft:husbandry/play_jukebox_in_meadows", "minecraft:adventure/play_jukebox_in_meadows", "minecraft:adventure/caves_and_cliff", "minecraft:adventure/fall_from_world_height", "minecraft:adventure/ride_strider_in_overworld_lava", "minecraft:nether/ride_strider_in_overworld_lava"))));
        Schema schema152 = builder.addSchema(2852, SAME_NAMESPACED);
        builder.addFixer(new WorldGenSettingsDisallowOldCustomWorldsFix(schema152));
    }

    private static UnaryOperator<String> createRenamer(Map<String, String> replacements) {
        return (string) -> {
            return replacements.getOrDefault(string, string);
        };
    }

    private static UnaryOperator<String> createRenamer(String old, String current) {
        return (string3) -> {
            return Objects.equals(string3, old) ? current : string3;
        };
    }
}
